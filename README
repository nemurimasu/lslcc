Currently this program takes LSL files named on the command line, parses them,
does some processing on them and outputs them to standard out without comments
or indentation. Expressions are, AFAIK, the only things not properly parsed
into trees.

The processing done consists of:
 * adding a llOwnerSay("Entering <function name>"); to the start of every
   function and event handler.

The idea is that single LSL scripts will be optimized, multiple LSL scripts will
be merged into fewer scripts, and (hopefully) scripts written in Ruby(?) will be
compiled into LSL.

Uses ANTLR for the parsing and JRuby for everything else.
